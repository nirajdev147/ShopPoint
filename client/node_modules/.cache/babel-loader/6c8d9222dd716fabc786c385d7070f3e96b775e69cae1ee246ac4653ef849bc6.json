{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Niraj\\\\OneDrive\\\\Desktop\\\\Final SEM PROJECT\\\\ShopPoint\\\\client\\\\src\\\\components\\\\admin\\\\categories\\\\AddCategoryModal.js\",\n  _s = $RefreshSig$();\n// import React, { Fragment, useContext, useState } from \"react\";\n// import { CategoryContext } from \"./index\";\n// import { createCategory, getAllCategory } from \"./FetchApi\";\n\n// const AddCategoryModal = (props) => {\n//   const { data, dispatch } = useContext(CategoryContext);\n\n//   const alert = (msg, type) => (\n//     <div className={`bg-${type}-200 py-2 px-4 w-full`}>{msg}</div>\n//   );\n\n//   const [fData, setFdata] = useState({\n//     cName: \"\",\n//     cDescription: \"\",\n//     cImage: \"\",\n//     cStatus: \"Active\",\n//     success: false,\n//     error: false,\n//   });\n\n//   const fetchData = async () => {\n//     let responseData = await getAllCategory();\n//     if (responseData.Categories) {\n//       dispatch({\n//         type: \"fetchCategoryAndChangeState\",\n//         payload: responseData.Categories,\n//       });\n//     }\n//   };\n\n//   if (fData.error || fData.success) {\n//     setTimeout(() => {\n//       setFdata({ ...fData, success: false, error: false });\n//     }, 2000);\n//   }\n\n//   const submitForm = async (e) => {\n//     dispatch({ type: \"loading\", payload: true });\n//     // Reset and prevent the form\n//     e.preventDefault();\n//     e.target.reset();\n\n//     if (!fData.cImage) {\n//       dispatch({ type: \"loading\", payload: false });\n//       return setFdata({ ...fData, error: \"Please upload a category image\" });\n//     }\n\n//     try {\n//       let responseData = await createCategory(fData);\n//       if (responseData.success) {\n//         fetchData();\n//         setFdata({\n//           ...fData,\n//           cName: \"\",\n//           cDescription: \"\",\n//           cImage: \"\",\n//           cStatus: \"Active\",\n//           success: responseData.success,\n//           error: false,\n//         });\n//         dispatch({ type: \"loading\", payload: false });\n//         setTimeout(() => {\n//           setFdata({\n//             ...fData,\n//             cName: \"\",\n//             cDescription: \"\",\n//             cImage: \"\",\n//             cStatus: \"Active\",\n//             success: false,\n//             error: false,\n//           });\n//         }, 2000);\n//       } else if (responseData.error) {\n//         setFdata({ ...fData, success: false, error: responseData.error });\n//         dispatch({ type: \"loading\", payload: false });\n//         setTimeout(() => {\n//           return setFdata({ ...fData, error: false, success: false });\n//         }, 2000);\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   return (\n//     <Fragment>\n//       {/* Black Overlay */}\n//       <div\n//         onClick={(e) => dispatch({ type: \"addCategoryModal\", payload: false })}\n//         className={`${\n//           data.addCategoryModal ? \"\" : \"hidden\"\n//         } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\n//       />\n//       {/* End Black Overlay */}\n\n//       {/* Modal Start */}\n//       <div\n//         className={`${\n//           data.addCategoryModal ? \"\" : \"hidden\"\n//         } fixed inset-0 m-4  flex items-center z-30 justify-center`}\n//       >\n//         <div className=\"relative bg-white w-12/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4  overflow-y-auto px-4 py-4 md:px-8\">\n//           <div className=\"flex items-center justify-between w-full pt-4\">\n//             <span className=\"text-left font-semibold text-2xl tracking-wider\">\n//               Add Category\n//             </span>\n//             {/* Close Modal */}\n//             <span\n//               style={{ background: \"#303031\" }}\n//               onClick={(e) =>\n//                 dispatch({ type: \"addCategoryModal\", payload: false })\n//               }\n//               className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\n//             >\n//               <svg\n//                 className=\"w-6 h-6\"\n//                 fill=\"none\"\n//                 stroke=\"currentColor\"\n//                 viewBox=\"0 0 24 24\"\n//                 xmlns=\"http://www.w3.org/2000/svg\"\n//               >\n//                 <path\n//                   strokeLinecap=\"round\"\n//                   strokeLinejoin=\"round\"\n//                   strokeWidth={2}\n//                   d=\"M6 18L18 6M6 6l12 12\"\n//                 />\n//               </svg>\n//             </span>\n//           </div>\n//           {fData.error ? alert(fData.error, \"red\") : \"\"}\n//           {fData.success ? alert(fData.success, \"green\") : \"\"}\n//           <form className=\"w-full\" onSubmit={(e) => submitForm(e)}>\n//             <div className=\"flex flex-col space-y-1 w-full py-4\">\n//               <label htmlFor=\"name\">Category Name</label>\n//               <input\n//                 onChange={(e) =>\n//                   setFdata({\n//                     ...fData,\n//                     success: false,\n//                     error: false,\n//                     cName: e.target.value,\n//                   })\n//                 }\n//                 value={fData.cName}\n//                 className=\"px-4 py-2 border focus:outline-none\"\n//                 type=\"text\"\n//               />\n//             </div>\n//             <div className=\"flex flex-col space-y-1 w-full\">\n//               <label htmlFor=\"description\">Category Description</label>\n//               <textarea\n//                 onChange={(e) =>\n//                   setFdata({\n//                     ...fData,\n//                     success: false,\n//                     error: false,\n//                     cDescription: e.target.value,\n//                   })\n//                 }\n//                 value={fData.cDescription}\n//                 className=\"px-4 py-2 border focus:outline-none\"\n//                 name=\"description\"\n//                 id=\"description\"\n//                 cols={5}\n//                 rows={5}\n//               />\n//             </div>\n//             {/* Image Field & function */}\n//             <div className=\"flex flex-col space-y-1 w-full\">\n//               <label htmlFor=\"name\">Category Image</label>\n//               <input\n//                 accept=\".jpg, .jpeg, .png\"\n//                 onChange={(e) => {\n//                   setFdata({\n//                     ...fData,\n//                     success: false,\n//                     error: false,\n//                     cImage: e.target.files[0],\n//                   });\n//                 }}\n//                 className=\"px-4 py-2 border focus:outline-none\"\n//                 type=\"file\"\n//               />\n//             </div>\n//             <div className=\"flex flex-col space-y-1 w-full\">\n//               <label htmlFor=\"status\">Category Status</label>\n//               <select\n//                 name=\"status\"\n//                 onChange={(e) =>\n//                   setFdata({\n//                     ...fData,\n//                     success: false,\n//                     error: false,\n//                     cStatus: e.target.value,\n//                   })\n//                 }\n//                 className=\"px-4 py-2 border focus:outline-none\"\n//                 id=\"status\"\n//               >\n//                 <option name=\"status\" value=\"Active\">\n//                   Active\n//                 </option>\n//                 <option name=\"status\" value=\"Disabled\">\n//                   Disabled\n//                 </option>\n//               </select>\n//             </div>\n//             <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\">\n//               <button\n//                 style={{ background: \"#303031\" }}\n//                 type=\"submit\"\n//                 className=\"bg-gray-800 text-gray-100 rounded-full text-lg font-medium py-2\"\n//               >\n//                 Create category\n//               </button>\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n//     </Fragment>\n//   );\n// };\n\n// export default AddCategoryModal;\n\nimport React, { Fragment, useContext, useState } from \"react\";\nimport { CategoryContext } from \"./index\";\nimport { createCategory, getAllCategory } from \"./FetchApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCategoryModal = props => {\n  _s();\n  const {\n    data,\n    dispatch\n  } = useContext(CategoryContext);\n  const alert = (msg, type) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `bg-${type}-200 py-2 px-4 w-full`,\n    children: msg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n  const [fData, setFdata] = useState({\n    cName: \"\",\n    cDescription: \"\",\n    cImage: \"\",\n    cStatus: \"Active\",\n    success: false,\n    error: false\n  });\n  const fetchData = async () => {\n    let responseData = await getAllCategory();\n    if (responseData.Categories) {\n      dispatch({\n        type: \"fetchCategoryAndChangeState\",\n        payload: responseData.Categories\n      });\n    }\n  };\n  if (fData.error || fData.success) {\n    setTimeout(() => {\n      setFdata({\n        ...fData,\n        success: false,\n        error: false\n      });\n    }, 2000);\n  }\n  const submitForm = async e => {\n    dispatch({\n      type: \"loading\",\n      payload: true\n    });\n    // Reset and prevent the form\n    e.preventDefault();\n    e.target.reset();\n    if (!fData.cImage) {\n      dispatch({\n        type: \"loading\",\n        payload: false\n      });\n      return setFdata({\n        ...fData,\n        error: \"Please upload a category image\"\n      });\n    }\n    try {\n      let responseData = await createCategory(fData);\n      if (responseData.success) {\n        fetchData();\n        setFdata({\n          ...fData,\n          cName: \"\",\n          cDescription: \"\",\n          cImage: \"\",\n          cStatus: \"Active\",\n          success: responseData.success,\n          error: false\n        });\n        dispatch({\n          type: \"loading\",\n          payload: false\n        });\n        setTimeout(() => {\n          setFdata({\n            ...fData,\n            cName: \"\",\n            cDescription: \"\",\n            cImage: \"\",\n            cStatus: \"Active\",\n            success: false,\n            error: false\n          });\n        }, 2000);\n      } else if (responseData.error) {\n        setFdata({\n          ...fData,\n          success: false,\n          error: responseData.error\n        });\n        dispatch({\n          type: \"loading\",\n          payload: false\n        });\n        setTimeout(() => {\n          return setFdata({\n            ...fData,\n            error: false,\n            success: false\n          });\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => dispatch({\n        type: \"addCategoryModal\",\n        payload: false\n      }),\n      className: `${data.addCategoryModal ? \"\" : \"hidden\"} fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${data.addCategoryModal ? \"\" : \"hidden\"} fixed inset-0 m-4  flex items-center z-30 justify-center`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-white w-12/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4  overflow-y-auto px-4 py-4 md:px-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between w-full pt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-left font-semibold text-2xl tracking-wider\",\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              background: \"#303031\"\n            },\n            onClick: e => dispatch({\n              type: \"addCategoryModal\",\n              payload: false\n            }),\n            className: \"cursor-pointer text-gray-100 py-2 px-2 rounded-full\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-6 h-6\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), fData.error ? alert(fData.error, \"red\") : \"\", fData.success ? alert(fData.success, \"green\") : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"w-full\",\n          onSubmit: e => submitForm(e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col space-y-1 w-full py-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Category Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => setFdata({\n                ...fData,\n                success: false,\n                error: false,\n                cName: e.target.value\n              }),\n              value: fData.cName,\n              className: \"px-4 py-2 border focus:outline-none\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col space-y-1 w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Category Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: e => setFdata({\n                ...fData,\n                success: false,\n                error: false,\n                cDescription: e.target.value\n              }),\n              value: fData.cDescription,\n              className: \"px-4 py-2 border focus:outline-none\",\n              name: \"description\",\n              id: \"description\",\n              cols: 5,\n              rows: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col space-y-1 w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Category Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \".jpg, .jpeg, .png\",\n              onChange: e => {\n                setFdata({\n                  ...fData,\n                  success: false,\n                  error: false,\n                  cImage: e.target.files[0]\n                });\n              },\n              className: \"image-input px-4 py-2 border focus:outline-none\",\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col space-y-1 w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"status\",\n              children: \"Category Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"status\",\n              onChange: e => setFdata({\n                ...fData,\n                success: false,\n                error: false,\n                cStatus: e.target.value\n              }),\n              className: \"px-4 py-2 border focus:outline-none\",\n              id: \"status\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                name: \"status\",\n                value: \"Active\",\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                name: \"status\",\n                value: \"Disabled\",\n                children: \"Disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                background: \"#303031\"\n              },\n              type: \"submit\",\n              className: \"bg-gray-800 text-gray-100 rounded-full text-lg font-medium py-2\",\n              children: \"Create category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .image-input:hover {\n          border-color: #4a90e2;\n          background-color: #f0f8ff;\n          cursor: pointer;\n        }\n        .image-input:focus {\n          box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);\n          border-color: #4a90e2;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCategoryModal, \"9r7Y220A6wm54ihDcz524cWjEG8=\");\n_c = AddCategoryModal;\nexport default AddCategoryModal;\nvar _c;\n$RefreshReg$(_c, \"AddCategoryModal\");","map":{"version":3,"names":["React","Fragment","useContext","useState","CategoryContext","createCategory","getAllCategory","jsxDEV","_jsxDEV","AddCategoryModal","props","_s","data","dispatch","alert","msg","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fData","setFdata","cName","cDescription","cImage","cStatus","success","error","fetchData","responseData","Categories","payload","setTimeout","submitForm","e","preventDefault","target","reset","console","log","onClick","addCategoryModal","style","background","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","onSubmit","htmlFor","onChange","value","name","id","cols","rows","accept","files","jsx","_c","$RefreshReg$"],"sources":["C:/Users/Niraj/OneDrive/Desktop/Final SEM PROJECT/ShopPoint/client/src/components/admin/categories/AddCategoryModal.js"],"sourcesContent":["// import React, { Fragment, useContext, useState } from \"react\";\r\n// import { CategoryContext } from \"./index\";\r\n// import { createCategory, getAllCategory } from \"./FetchApi\";\r\n\r\n// const AddCategoryModal = (props) => {\r\n//   const { data, dispatch } = useContext(CategoryContext);\r\n\r\n//   const alert = (msg, type) => (\r\n//     <div className={`bg-${type}-200 py-2 px-4 w-full`}>{msg}</div>\r\n//   );\r\n\r\n//   const [fData, setFdata] = useState({\r\n//     cName: \"\",\r\n//     cDescription: \"\",\r\n//     cImage: \"\",\r\n//     cStatus: \"Active\",\r\n//     success: false,\r\n//     error: false,\r\n//   });\r\n\r\n//   const fetchData = async () => {\r\n//     let responseData = await getAllCategory();\r\n//     if (responseData.Categories) {\r\n//       dispatch({\r\n//         type: \"fetchCategoryAndChangeState\",\r\n//         payload: responseData.Categories,\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   if (fData.error || fData.success) {\r\n//     setTimeout(() => {\r\n//       setFdata({ ...fData, success: false, error: false });\r\n//     }, 2000);\r\n//   }\r\n\r\n//   const submitForm = async (e) => {\r\n//     dispatch({ type: \"loading\", payload: true });\r\n//     // Reset and prevent the form\r\n//     e.preventDefault();\r\n//     e.target.reset();\r\n\r\n//     if (!fData.cImage) {\r\n//       dispatch({ type: \"loading\", payload: false });\r\n//       return setFdata({ ...fData, error: \"Please upload a category image\" });\r\n//     }\r\n\r\n//     try {\r\n//       let responseData = await createCategory(fData);\r\n//       if (responseData.success) {\r\n//         fetchData();\r\n//         setFdata({\r\n//           ...fData,\r\n//           cName: \"\",\r\n//           cDescription: \"\",\r\n//           cImage: \"\",\r\n//           cStatus: \"Active\",\r\n//           success: responseData.success,\r\n//           error: false,\r\n//         });\r\n//         dispatch({ type: \"loading\", payload: false });\r\n//         setTimeout(() => {\r\n//           setFdata({\r\n//             ...fData,\r\n//             cName: \"\",\r\n//             cDescription: \"\",\r\n//             cImage: \"\",\r\n//             cStatus: \"Active\",\r\n//             success: false,\r\n//             error: false,\r\n//           });\r\n//         }, 2000);\r\n//       } else if (responseData.error) {\r\n//         setFdata({ ...fData, success: false, error: responseData.error });\r\n//         dispatch({ type: \"loading\", payload: false });\r\n//         setTimeout(() => {\r\n//           return setFdata({ ...fData, error: false, success: false });\r\n//         }, 2000);\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       {/* Black Overlay */}\r\n//       <div\r\n//         onClick={(e) => dispatch({ type: \"addCategoryModal\", payload: false })}\r\n//         className={`${\r\n//           data.addCategoryModal ? \"\" : \"hidden\"\r\n//         } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\r\n//       />\r\n//       {/* End Black Overlay */}\r\n\r\n//       {/* Modal Start */}\r\n//       <div\r\n//         className={`${\r\n//           data.addCategoryModal ? \"\" : \"hidden\"\r\n//         } fixed inset-0 m-4  flex items-center z-30 justify-center`}\r\n//       >\r\n//         <div className=\"relative bg-white w-12/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4  overflow-y-auto px-4 py-4 md:px-8\">\r\n//           <div className=\"flex items-center justify-between w-full pt-4\">\r\n//             <span className=\"text-left font-semibold text-2xl tracking-wider\">\r\n//               Add Category\r\n//             </span>\r\n//             {/* Close Modal */}\r\n//             <span\r\n//               style={{ background: \"#303031\" }}\r\n//               onClick={(e) =>\r\n//                 dispatch({ type: \"addCategoryModal\", payload: false })\r\n//               }\r\n//               className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\r\n//             >\r\n//               <svg\r\n//                 className=\"w-6 h-6\"\r\n//                 fill=\"none\"\r\n//                 stroke=\"currentColor\"\r\n//                 viewBox=\"0 0 24 24\"\r\n//                 xmlns=\"http://www.w3.org/2000/svg\"\r\n//               >\r\n//                 <path\r\n//                   strokeLinecap=\"round\"\r\n//                   strokeLinejoin=\"round\"\r\n//                   strokeWidth={2}\r\n//                   d=\"M6 18L18 6M6 6l12 12\"\r\n//                 />\r\n//               </svg>\r\n//             </span>\r\n//           </div>\r\n//           {fData.error ? alert(fData.error, \"red\") : \"\"}\r\n//           {fData.success ? alert(fData.success, \"green\") : \"\"}\r\n//           <form className=\"w-full\" onSubmit={(e) => submitForm(e)}>\r\n//             <div className=\"flex flex-col space-y-1 w-full py-4\">\r\n//               <label htmlFor=\"name\">Category Name</label>\r\n//               <input\r\n//                 onChange={(e) =>\r\n//                   setFdata({\r\n//                     ...fData,\r\n//                     success: false,\r\n//                     error: false,\r\n//                     cName: e.target.value,\r\n//                   })\r\n//                 }\r\n//                 value={fData.cName}\r\n//                 className=\"px-4 py-2 border focus:outline-none\"\r\n//                 type=\"text\"\r\n//               />\r\n//             </div>\r\n//             <div className=\"flex flex-col space-y-1 w-full\">\r\n//               <label htmlFor=\"description\">Category Description</label>\r\n//               <textarea\r\n//                 onChange={(e) =>\r\n//                   setFdata({\r\n//                     ...fData,\r\n//                     success: false,\r\n//                     error: false,\r\n//                     cDescription: e.target.value,\r\n//                   })\r\n//                 }\r\n//                 value={fData.cDescription}\r\n//                 className=\"px-4 py-2 border focus:outline-none\"\r\n//                 name=\"description\"\r\n//                 id=\"description\"\r\n//                 cols={5}\r\n//                 rows={5}\r\n//               />\r\n//             </div>\r\n//             {/* Image Field & function */}\r\n//             <div className=\"flex flex-col space-y-1 w-full\">\r\n//               <label htmlFor=\"name\">Category Image</label>\r\n//               <input\r\n//                 accept=\".jpg, .jpeg, .png\"\r\n//                 onChange={(e) => {\r\n//                   setFdata({\r\n//                     ...fData,\r\n//                     success: false,\r\n//                     error: false,\r\n//                     cImage: e.target.files[0],\r\n//                   });\r\n//                 }}\r\n//                 className=\"px-4 py-2 border focus:outline-none\"\r\n//                 type=\"file\"\r\n//               />\r\n//             </div>\r\n//             <div className=\"flex flex-col space-y-1 w-full\">\r\n//               <label htmlFor=\"status\">Category Status</label>\r\n//               <select\r\n//                 name=\"status\"\r\n//                 onChange={(e) =>\r\n//                   setFdata({\r\n//                     ...fData,\r\n//                     success: false,\r\n//                     error: false,\r\n//                     cStatus: e.target.value,\r\n//                   })\r\n//                 }\r\n//                 className=\"px-4 py-2 border focus:outline-none\"\r\n//                 id=\"status\"\r\n//               >\r\n//                 <option name=\"status\" value=\"Active\">\r\n//                   Active\r\n//                 </option>\r\n//                 <option name=\"status\" value=\"Disabled\">\r\n//                   Disabled\r\n//                 </option>\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\">\r\n//               <button\r\n//                 style={{ background: \"#303031\" }}\r\n//                 type=\"submit\"\r\n//                 className=\"bg-gray-800 text-gray-100 rounded-full text-lg font-medium py-2\"\r\n//               >\r\n//                 Create category\r\n//               </button>\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// export default AddCategoryModal;\r\n\r\nimport React, { Fragment, useContext, useState } from \"react\";\r\nimport { CategoryContext } from \"./index\";\r\nimport { createCategory, getAllCategory } from \"./FetchApi\";\r\n\r\nconst AddCategoryModal = (props) => {\r\n  const { data, dispatch } = useContext(CategoryContext);\r\n\r\n  const alert = (msg, type) => (\r\n    <div className={`bg-${type}-200 py-2 px-4 w-full`}>{msg}</div>\r\n  );\r\n\r\n  const [fData, setFdata] = useState({\r\n    cName: \"\",\r\n    cDescription: \"\",\r\n    cImage: \"\",\r\n    cStatus: \"Active\",\r\n    success: false,\r\n    error: false,\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    let responseData = await getAllCategory();\r\n    if (responseData.Categories) {\r\n      dispatch({\r\n        type: \"fetchCategoryAndChangeState\",\r\n        payload: responseData.Categories,\r\n      });\r\n    }\r\n  };\r\n\r\n  if (fData.error || fData.success) {\r\n    setTimeout(() => {\r\n      setFdata({ ...fData, success: false, error: false });\r\n    }, 2000);\r\n  }\r\n\r\n  const submitForm = async (e) => {\r\n    dispatch({ type: \"loading\", payload: true });\r\n    // Reset and prevent the form\r\n    e.preventDefault();\r\n    e.target.reset();\r\n\r\n    if (!fData.cImage) {\r\n      dispatch({ type: \"loading\", payload: false });\r\n      return setFdata({ ...fData, error: \"Please upload a category image\" });\r\n    }\r\n\r\n    try {\r\n      let responseData = await createCategory(fData);\r\n      if (responseData.success) {\r\n        fetchData();\r\n        setFdata({\r\n          ...fData,\r\n          cName: \"\",\r\n          cDescription: \"\",\r\n          cImage: \"\",\r\n          cStatus: \"Active\",\r\n          success: responseData.success,\r\n          error: false,\r\n        });\r\n        dispatch({ type: \"loading\", payload: false });\r\n        setTimeout(() => {\r\n          setFdata({\r\n            ...fData,\r\n            cName: \"\",\r\n            cDescription: \"\",\r\n            cImage: \"\",\r\n            cStatus: \"Active\",\r\n            success: false,\r\n            error: false,\r\n          });\r\n        }, 2000);\r\n      } else if (responseData.error) {\r\n        setFdata({ ...fData, success: false, error: responseData.error });\r\n        dispatch({ type: \"loading\", payload: false });\r\n        setTimeout(() => {\r\n          return setFdata({ ...fData, error: false, success: false });\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* Black Overlay */}\r\n      <div\r\n        onClick={(e) => dispatch({ type: \"addCategoryModal\", payload: false })}\r\n        className={`${\r\n          data.addCategoryModal ? \"\" : \"hidden\"\r\n        } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\r\n      />\r\n      {/* End Black Overlay */}\r\n\r\n      {/* Modal Start */}\r\n      <div\r\n        className={`${\r\n          data.addCategoryModal ? \"\" : \"hidden\"\r\n        } fixed inset-0 m-4  flex items-center z-30 justify-center`}\r\n      >\r\n        <div className=\"relative bg-white w-12/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4  overflow-y-auto px-4 py-4 md:px-8\">\r\n          <div className=\"flex items-center justify-between w-full pt-4\">\r\n            <span className=\"text-left font-semibold text-2xl tracking-wider\">\r\n              Add Category\r\n            </span>\r\n            {/* Close Modal */}\r\n            <span\r\n              style={{ background: \"#303031\" }}\r\n              onClick={(e) =>\r\n                dispatch({ type: \"addCategoryModal\", payload: false })\r\n              }\r\n              className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\r\n            >\r\n              <svg\r\n                className=\"w-6 h-6\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                />\r\n              </svg>\r\n            </span>\r\n          </div>\r\n          {fData.error ? alert(fData.error, \"red\") : \"\"}\r\n          {fData.success ? alert(fData.success, \"green\") : \"\"}\r\n          <form className=\"w-full\" onSubmit={(e) => submitForm(e)}>\r\n            <div className=\"flex flex-col space-y-1 w-full py-4\">\r\n              <label htmlFor=\"name\">Category Name</label>\r\n              <input\r\n                onChange={(e) =>\r\n                  setFdata({\r\n                    ...fData,\r\n                    success: false,\r\n                    error: false,\r\n                    cName: e.target.value,\r\n                  })\r\n                }\r\n                value={fData.cName}\r\n                className=\"px-4 py-2 border focus:outline-none\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col space-y-1 w-full\">\r\n              <label htmlFor=\"description\">Category Description</label>\r\n              <textarea\r\n                onChange={(e) =>\r\n                  setFdata({\r\n                    ...fData,\r\n                    success: false,\r\n                    error: false,\r\n                    cDescription: e.target.value,\r\n                  })\r\n                }\r\n                value={fData.cDescription}\r\n                className=\"px-4 py-2 border focus:outline-none\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                cols={5}\r\n                rows={5}\r\n              />\r\n            </div>\r\n            {/* Image Field & function */}\r\n            <div className=\"flex flex-col space-y-1 w-full\">\r\n              <label htmlFor=\"name\">Category Image</label>\r\n              <input\r\n                accept=\".jpg, .jpeg, .png\"\r\n                onChange={(e) => {\r\n                  setFdata({\r\n                    ...fData,\r\n                    success: false,\r\n                    error: false,\r\n                    cImage: e.target.files[0],\r\n                  });\r\n                }}\r\n                className=\"image-input px-4 py-2 border focus:outline-none\"\r\n                type=\"file\"\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col space-y-1 w-full\">\r\n              <label htmlFor=\"status\">Category Status</label>\r\n              <select\r\n                name=\"status\"\r\n                onChange={(e) =>\r\n                  setFdata({\r\n                    ...fData,\r\n                    success: false,\r\n                    error: false,\r\n                    cStatus: e.target.value,\r\n                  })\r\n                }\r\n                className=\"px-4 py-2 border focus:outline-none\"\r\n                id=\"status\"\r\n              >\r\n                <option name=\"status\" value=\"Active\">\r\n                  Active\r\n                </option>\r\n                <option name=\"status\" value=\"Disabled\">\r\n                  Disabled\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\">\r\n              <button\r\n                style={{ background: \"#303031\" }}\r\n                type=\"submit\"\r\n                className=\"bg-gray-800 text-gray-100 rounded-full text-lg font-medium py-2\"\r\n              >\r\n                Create category\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/* Adding inline styles for hover and click effect */}\r\n      <style jsx>{`\r\n        .image-input:hover {\r\n          border-color: #4a90e2;\r\n          background-color: #f0f8ff;\r\n          cursor: pointer;\r\n        }\r\n        .image-input:focus {\r\n          box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);\r\n          border-color: #4a90e2;\r\n        }\r\n      `}</style>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddCategoryModal;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}