{"ast":null,"code":"// import React, { Fragment, useContext, useEffect, useState } from \"react\";\n// import { getAllProduct, deleteProduct } from \"./FetchApi\";\n// import moment from \"moment\";\n// import { ProductContext } from \"./index\";\n\n// const apiURL = process.env.REACT_APP_API_URL;\n\n// const AllProduct = (props) => {\n//   const { data, dispatch } = useContext(ProductContext);\n//   const { products } = data;\n\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     fetchData();\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, []);\n\n//   const fetchData = async () => {\n//     setLoading(true);\n//     let responseData = await getAllProduct();\n//     setTimeout(() => {\n//       if (responseData && responseData.Products) {\n//         dispatch({\n//           type: \"fetchProductsAndChangeState\",\n//           payload: responseData.Products,\n//         });\n//         setLoading(false);\n//       }\n//     }, 1000);\n//   };\n\n//   const deleteProductReq = async (pId) => {\n//     let deleteC = await deleteProduct(pId);\n//     if (deleteC.error) {\n//       console.log(deleteC.error);\n//     } else if (deleteC.success) {\n//       console.log(deleteC.success);\n//       fetchData();\n//     }\n//   };\n\n//   /* This method call the editmodal & dispatch product context */\n//   const editProduct = (pId, product, type) => {\n//     if (type) {\n//       dispatch({\n//         type: \"editProductModalOpen\",\n//         product: { ...product, pId: pId },\n//       });\n//     }\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"flex items-center justify-center p-8\">\n//         <svg\n//           className=\"w-12 h-12 animate-spin text-gray-600\"\n//           fill=\"none\"\n//           stroke=\"currentColor\"\n//           viewBox=\"0 0 24 24\"\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//         >\n//           <path\n//             strokeLinecap=\"round\"\n//             strokeLinejoin=\"round\"\n//             strokeWidth=\"2\"\n//             d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n//           ></path>\n//         </svg>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <Fragment>\n//       <div className=\"col-span-1 overflow-auto bg-white shadow-lg p-4\">\n//         <table className=\"table-auto border w-full my-2\">\n//           <thead>\n//             <tr>\n//               <th className=\"px-4 py-2 border\">Product</th>\n//               <th className=\"px-4 py-2 border\">Description</th>\n//               <th className=\"px-4 py-2 border\">Image</th>\n//               <th className=\"px-4 py-2 border\">Status</th>\n//               <th className=\"px-4 py-2 border\">Stock</th>\n//               <th className=\"px-4 py-2 border\">Category</th>\n//               <th className=\"px-4 py-2 border\">Offer</th>\n//               <th className=\"px-4 py-2 border\">Created at</th>\n//               <th className=\"px-4 py-2 border\">Updated at</th>\n//               <th className=\"px-4 py-2 border\">Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {products && products.length > 0 ? (\n//               products.map((item, key) => {\n//                 return (\n//                   <ProductTable\n//                     product={item}\n//                     editProduct={(pId, product, type) =>\n//                       editProduct(pId, product, type)\n//                     }\n//                     deleteProduct={(pId) => deleteProductReq(pId)}\n//                     key={key}\n//                   />\n//                 );\n//               })\n//             ) : (\n//               <tr>\n//                 <td\n//                   colSpan=\"10\"\n//                   className=\"text-xl text-center font-semibold py-8\"\n//                 >\n//                   No product found\n//                 </td>\n//               </tr>\n//             )}\n//           </tbody>\n//         </table>\n//         <div className=\"text-sm text-gray-600 mt-2\">\n//           Total {products && products.length} product found\n//         </div>\n//       </div>\n//     </Fragment>\n//   );\n// };\n\n// /* Single Product Component */\n// const ProductTable = ({ product, deleteProduct, editProduct }) => {\n//   return (\n//     <Fragment>\n//       <tr>\n//         <td className=\"p-2 text-left\">\n//           {product.pName.length > 15\n//             ? product.pDescription.substring(1, 15) + \"...\"\n//             : product.pName}\n//         </td>\n//         <td className=\"p-2 text-left\">\n//           {product.pDescription.slice(0, 15)}...\n//         </td>\n//         <td className=\"p-2 text-center\">\n//           <img\n//             className=\"w-12 h-12 object-cover object-center\"\n//             src={`${apiURL}/uploads/products/${product.pImages[0]}`}\n//             alt=\"pic\"\n//           />\n//         </td>\n//         <td className=\"p-2 text-center\">\n//           {product.pStatus === \"Active\" ? (\n//             <span className=\"bg-green-200 rounded-full text-center text-xs px-2 font-semibold\">\n//               {product.pStatus}\n//             </span>\n//           ) : (\n//             <span className=\"bg-red-200 rounded-full text-center text-xs px-2 font-semibold\">\n//               {product.pStatus}\n//             </span>\n//           )}\n//         </td>\n//         <td className=\"p-2 text-center\">{product.pQuantity}</td>\n//         <td className=\"p-2 text-center\">{product.pCategory ? product.pCategory.cName : 'N/A'}</td>\n//         <td className=\"p-2 text-center\">{product.pOffer}</td>\n//         <td className=\"p-2 text-center\">\n//           {moment(product.createdAt).format(\"lll\")}\n//         </td>\n//         <td className=\"p-2 text-center\">\n//           {moment(product.updatedAt).format(\"lll\")}\n//         </td>\n//         <td className=\"p-2 flex items-center justify-center\">\n//           <span\n//             onClick={(e) => editProduct(product._id, product, true)}\n//             className=\"cursor-pointer hover:bg-gray-200 rounded-lg p-2 mx-1\"\n//           >\n//             <svg\n//               className=\"w-6 h-6 fill-current text-green-500\"\n//               fill=\"currentColor\"\n//               viewBox=\"0 0 20 20\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//             >\n//               <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n//               <path\n//                 fillRule=\"evenodd\"\n//                 d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n//                 clipRule=\"evenodd\"\n//               />\n//             </svg>\n//           </span>\n//           <span\n//             onClick={(e) => deleteProduct(product._id)}\n//             className=\"cursor-pointer hover:bg-gray-200 rounded-lg p-2 mx-1\"\n//           >\n//             <svg\n//               className=\"w-6 h-6 fill-current text-red-500\"\n//               fill=\"currentColor\"\n//               viewBox=\"0 0 20 20\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//             >\n//               <path\n//                 fillRule=\"evenodd\"\n//                 d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n//                 clipRule=\"evenodd\"\n//               />\n//             </svg>\n//           </span>\n//         </td>\n//       </tr>\n//     </Fragment>\n//   );\n// };\n\n// export default AllProduct;","map":{"version":3,"names":[],"sources":["D:/FinaLProjectCopy/client/src/components/admin/products/ProductTable.js"],"sourcesContent":["// import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\n// import { getAllProduct, deleteProduct } from \"./FetchApi\";\r\n// import moment from \"moment\";\r\n// import { ProductContext } from \"./index\";\r\n\r\n// const apiURL = process.env.REACT_APP_API_URL;\r\n\r\n// const AllProduct = (props) => {\r\n//   const { data, dispatch } = useContext(ProductContext);\r\n//   const { products } = data;\r\n\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n//   }, []);\r\n\r\n//   const fetchData = async () => {\r\n//     setLoading(true);\r\n//     let responseData = await getAllProduct();\r\n//     setTimeout(() => {\r\n//       if (responseData && responseData.Products) {\r\n//         dispatch({\r\n//           type: \"fetchProductsAndChangeState\",\r\n//           payload: responseData.Products,\r\n//         });\r\n//         setLoading(false);\r\n//       }\r\n//     }, 1000);\r\n//   };\r\n\r\n//   const deleteProductReq = async (pId) => {\r\n//     let deleteC = await deleteProduct(pId);\r\n//     if (deleteC.error) {\r\n//       console.log(deleteC.error);\r\n//     } else if (deleteC.success) {\r\n//       console.log(deleteC.success);\r\n//       fetchData();\r\n//     }\r\n//   };\r\n\r\n//   /* This method call the editmodal & dispatch product context */\r\n//   const editProduct = (pId, product, type) => {\r\n//     if (type) {\r\n//       dispatch({\r\n//         type: \"editProductModalOpen\",\r\n//         product: { ...product, pId: pId },\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center p-8\">\r\n//         <svg\r\n//           className=\"w-12 h-12 animate-spin text-gray-600\"\r\n//           fill=\"none\"\r\n//           stroke=\"currentColor\"\r\n//           viewBox=\"0 0 24 24\"\r\n//           xmlns=\"http://www.w3.org/2000/svg\"\r\n//         >\r\n//           <path\r\n//             strokeLinecap=\"round\"\r\n//             strokeLinejoin=\"round\"\r\n//             strokeWidth=\"2\"\r\n//             d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n//           ></path>\r\n//         </svg>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <div className=\"col-span-1 overflow-auto bg-white shadow-lg p-4\">\r\n//         <table className=\"table-auto border w-full my-2\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th className=\"px-4 py-2 border\">Product</th>\r\n//               <th className=\"px-4 py-2 border\">Description</th>\r\n//               <th className=\"px-4 py-2 border\">Image</th>\r\n//               <th className=\"px-4 py-2 border\">Status</th>\r\n//               <th className=\"px-4 py-2 border\">Stock</th>\r\n//               <th className=\"px-4 py-2 border\">Category</th>\r\n//               <th className=\"px-4 py-2 border\">Offer</th>\r\n//               <th className=\"px-4 py-2 border\">Created at</th>\r\n//               <th className=\"px-4 py-2 border\">Updated at</th>\r\n//               <th className=\"px-4 py-2 border\">Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {products && products.length > 0 ? (\r\n//               products.map((item, key) => {\r\n//                 return (\r\n//                   <ProductTable\r\n//                     product={item}\r\n//                     editProduct={(pId, product, type) =>\r\n//                       editProduct(pId, product, type)\r\n//                     }\r\n//                     deleteProduct={(pId) => deleteProductReq(pId)}\r\n//                     key={key}\r\n//                   />\r\n//                 );\r\n//               })\r\n//             ) : (\r\n//               <tr>\r\n//                 <td\r\n//                   colSpan=\"10\"\r\n//                   className=\"text-xl text-center font-semibold py-8\"\r\n//                 >\r\n//                   No product found\r\n//                 </td>\r\n//               </tr>\r\n//             )}\r\n//           </tbody>\r\n//         </table>\r\n//         <div className=\"text-sm text-gray-600 mt-2\">\r\n//           Total {products && products.length} product found\r\n//         </div>\r\n//       </div>\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// /* Single Product Component */\r\n// const ProductTable = ({ product, deleteProduct, editProduct }) => {\r\n//   return (\r\n//     <Fragment>\r\n//       <tr>\r\n//         <td className=\"p-2 text-left\">\r\n//           {product.pName.length > 15\r\n//             ? product.pDescription.substring(1, 15) + \"...\"\r\n//             : product.pName}\r\n//         </td>\r\n//         <td className=\"p-2 text-left\">\r\n//           {product.pDescription.slice(0, 15)}...\r\n//         </td>\r\n//         <td className=\"p-2 text-center\">\r\n//           <img\r\n//             className=\"w-12 h-12 object-cover object-center\"\r\n//             src={`${apiURL}/uploads/products/${product.pImages[0]}`}\r\n//             alt=\"pic\"\r\n//           />\r\n//         </td>\r\n//         <td className=\"p-2 text-center\">\r\n//           {product.pStatus === \"Active\" ? (\r\n//             <span className=\"bg-green-200 rounded-full text-center text-xs px-2 font-semibold\">\r\n//               {product.pStatus}\r\n//             </span>\r\n//           ) : (\r\n//             <span className=\"bg-red-200 rounded-full text-center text-xs px-2 font-semibold\">\r\n//               {product.pStatus}\r\n//             </span>\r\n//           )}\r\n//         </td>\r\n//         <td className=\"p-2 text-center\">{product.pQuantity}</td>\r\n//         <td className=\"p-2 text-center\">{product.pCategory ? product.pCategory.cName : 'N/A'}</td>\r\n//         <td className=\"p-2 text-center\">{product.pOffer}</td>\r\n//         <td className=\"p-2 text-center\">\r\n//           {moment(product.createdAt).format(\"lll\")}\r\n//         </td>\r\n//         <td className=\"p-2 text-center\">\r\n//           {moment(product.updatedAt).format(\"lll\")}\r\n//         </td>\r\n//         <td className=\"p-2 flex items-center justify-center\">\r\n//           <span\r\n//             onClick={(e) => editProduct(product._id, product, true)}\r\n//             className=\"cursor-pointer hover:bg-gray-200 rounded-lg p-2 mx-1\"\r\n//           >\r\n//             <svg\r\n//               className=\"w-6 h-6 fill-current text-green-500\"\r\n//               fill=\"currentColor\"\r\n//               viewBox=\"0 0 20 20\"\r\n//               xmlns=\"http://www.w3.org/2000/svg\"\r\n//             >\r\n//               <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\r\n//               <path\r\n//                 fillRule=\"evenodd\"\r\n//                 d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\r\n//                 clipRule=\"evenodd\"\r\n//               />\r\n//             </svg>\r\n//           </span>\r\n//           <span\r\n//             onClick={(e) => deleteProduct(product._id)}\r\n//             className=\"cursor-pointer hover:bg-gray-200 rounded-lg p-2 mx-1\"\r\n//           >\r\n//             <svg\r\n//               className=\"w-6 h-6 fill-current text-red-500\"\r\n//               fill=\"currentColor\"\r\n//               viewBox=\"0 0 20 20\"\r\n//               xmlns=\"http://www.w3.org/2000/svg\"\r\n//             >\r\n//               <path\r\n//                 fillRule=\"evenodd\"\r\n//                 d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n//                 clipRule=\"evenodd\"\r\n//               />\r\n//             </svg>\r\n//           </span>\r\n//         </td>\r\n//       </tr>\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// export default AllProduct;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}