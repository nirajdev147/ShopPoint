{"ast":null,"code":"// import React, { Fragment, useContext, useState } from \"react\";\n// import { CategoryContext } from \"./index\";\n// import { createCategory, getAllCategory } from \"./FetchApi\";\n\n// const AddCategoryModal = (props) => {\n//   const { data, dispatch } = useContext(CategoryContext);\n\n//   const alert = (msg, type) => (\n//     <div className={`bg-${type}-200 py-2 px-4 w-full`}>{msg}</div>\n//   );\n\n//   const [fData, setFdata] = useState({\n//     cName: \"\",\n//     cDescription: \"\",\n//     cImage: \"\",\n//     cStatus: \"Active\",\n//     success: false,\n//     error: false,\n//   });\n\n//   const fetchData = async () => {\n//     let responseData = await getAllCategory();\n//     if (responseData.Categories) {\n//       dispatch({\n//         type: \"fetchCategoryAndChangeState\",\n//         payload: responseData.Categories,\n//       });\n//     }\n//   };\n\n//   if (fData.error || fData.success) {\n//     setTimeout(() => {\n//       setFdata({ ...fData, success: false, error: false });\n//     }, 2000);\n//   }\n\n//   const submitForm = async (e) => {\n//     dispatch({ type: \"loading\", payload: true });\n//     // Reset and prevent the form\n//     e.preventDefault();\n//     e.target.reset();\n\n//     if (!fData.cImage) {\n//       dispatch({ type: \"loading\", payload: false });\n//       return setFdata({ ...fData, error: \"Please upload a category image\" });\n//     }\n\n//     try {\n//       let responseData = await createCategory(fData);\n//       if (responseData.success) {\n//         fetchData();\n//         setFdata({\n//           ...fData,\n//           cName: \"\",\n//           cDescription: \"\",\n//           cImage: \"\",\n//           cStatus: \"Active\",\n//           success: responseData.success,\n//           error: false,\n//         });\n//         dispatch({ type: \"loading\", payload: false });\n//         setTimeout(() => {\n//           setFdata({\n//             ...fData,\n//             cName: \"\",\n//             cDescription: \"\",\n//             cImage: \"\",\n//             cStatus: \"Active\",\n//             success: false,\n//             error: false,\n//           });\n//         }, 2000);\n//       } else if (responseData.error) {\n//         setFdata({ ...fData, success: false, error: responseData.error });\n//         dispatch({ type: \"loading\", payload: false });\n//         setTimeout(() => {\n//           return setFdata({ ...fData, error: false, success: false });\n//         }, 2000);\n//       }\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   return (\n//     <Fragment>\n//       {/* Black Overlay */}\n//       <div\n//         onClick={(e) => dispatch({ type: \"addCategoryModal\", payload: false })}\n//         className={`${\n//           data.addCategoryModal ? \"\" : \"hidden\"\n//         } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\n//       />\n//       {/* End Black Overlay */}\n\n//       {/* Modal Start */}\n//       <div\n//         className={`${\n//           data.addCategoryModal ? \"\" : \"hidden\"\n//         } fixed inset-0 m-4  flex items-center z-30 justify-center`}\n//       >\n//         <div className=\"relative bg-white w-12/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4  overflow-y-auto px-4 py-4 md:px-8\">\n//           <div className=\"flex items-center justify-between w-full pt-4\">\n//             <span className=\"text-left font-semibold text-2xl tracking-wider\">\n//               Add Category\n//             </span>\n//             {/* Close Modal */}\n//             <span\n//               style={{ background: \"#303031\" }}\n//               onClick={(e) =>\n//                 dispatch({ type: \"addCategoryModal\", payload: false })\n//               }\n//               className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\n//             >\n//               <svg\n//                 className=\"w-6 h-6\"\n//                 fill=\"none\"\n//                 stroke=\"currentColor\"\n//                 viewBox=\"0 0 24 24\"\n//                 xmlns=\"http://www.w3.org/2000/svg\"\n//               >\n//                 <path\n//                   strokeLinecap=\"round\"\n//                   strokeLinejoin=\"round\"\n//                   strokeWidth={2}\n//                   d=\"M6 18L18 6M6 6l12 12\"\n//                 />\n//               </svg>\n//             </span>\n//           </div>\n//           {fData.error ? alert(fData.error, \"red\") : \"\"}\n//           {fData.success ? alert(fData.success, \"green\") : \"\"}\n//           <form className=\"w-full\" onSubmit={(e) => submitForm(e)}>\n//             <div className=\"flex flex-col space-y-1 w-full py-4\">\n//               <label htmlFor=\"name\">Category Name</label>\n//               <input\n//                 onChange={(e) =>\n//                   setFdata({\n//                     ...fData,\n//                     success: false,\n//                     error: false,\n//                     cName: e.target.value,\n//                   })\n//                 }\n//                 value={fData.cName}\n//                 className=\"px-4 py-2 border focus:outline-none\"\n//                 type=\"text\"\n//               />\n//             </div>\n//             <div className=\"flex flex-col space-y-1 w-full\">\n//               <label htmlFor=\"description\">Category Description</label>\n//               <textarea\n//                 onChange={(e) =>\n//                   setFdata({\n//                     ...fData,\n//                     success: false,\n//                     error: false,\n//                     cDescription: e.target.value,\n//                   })\n//                 }\n//                 value={fData.cDescription}\n//                 className=\"px-4 py-2 border focus:outline-none\"\n//                 name=\"description\"\n//                 id=\"description\"\n//                 cols={5}\n//                 rows={5}\n//               />\n//             </div>\n//             {/* Image Field & function */}\n//             <div className=\"flex flex-col space-y-1 w-full\">\n//               <label htmlFor=\"name\">Category Image</label>\n//               <input\n//                 accept=\".jpg, .jpeg, .png\"\n//                 onChange={(e) => {\n//                   setFdata({\n//                     ...fData,\n//                     success: false,\n//                     error: false,\n//                     cImage: e.target.files[0],\n//                   });\n//                 }}\n//                 className=\"px-4 py-2 border focus:outline-none\"\n//                 type=\"file\"\n//               />\n//             </div>\n//             <div className=\"flex flex-col space-y-1 w-full\">\n//               <label htmlFor=\"status\">Category Status</label>\n//               <select\n//                 name=\"status\"\n//                 onChange={(e) =>\n//                   setFdata({\n//                     ...fData,\n//                     success: false,\n//                     error: false,\n//                     cStatus: e.target.value,\n//                   })\n//                 }\n//                 className=\"px-4 py-2 border focus:outline-none\"\n//                 id=\"status\"\n//               >\n//                 <option name=\"status\" value=\"Active\">\n//                   Active\n//                 </option>\n//                 <option name=\"status\" value=\"Disabled\">\n//                   Disabled\n//                 </option>\n//               </select>\n//             </div>\n//             <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\">\n//               <button\n//                 style={{ background: \"#303031\" }}\n//                 type=\"submit\"\n//                 className=\"bg-gray-800 text-gray-100 rounded-full text-lg font-medium py-2\"\n//               >\n//                 Create category\n//               </button>\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n//     </Fragment>\n//   );\n// };\n\n// export default AddCategoryModal;","map":{"version":3,"names":[],"sources":["C:/Users/Niraj/OneDrive/Desktop/Final SEM PROJECT/ShopPoint/client/src/components/admin/categories/AddCategoryModal.js"],"sourcesContent":["// import React, { Fragment, useContext, useState } from \"react\";\r\n// import { CategoryContext } from \"./index\";\r\n// import { createCategory, getAllCategory } from \"./FetchApi\";\r\n\r\n// const AddCategoryModal = (props) => {\r\n//   const { data, dispatch } = useContext(CategoryContext);\r\n\r\n//   const alert = (msg, type) => (\r\n//     <div className={`bg-${type}-200 py-2 px-4 w-full`}>{msg}</div>\r\n//   );\r\n\r\n//   const [fData, setFdata] = useState({\r\n//     cName: \"\",\r\n//     cDescription: \"\",\r\n//     cImage: \"\",\r\n//     cStatus: \"Active\",\r\n//     success: false,\r\n//     error: false,\r\n//   });\r\n\r\n//   const fetchData = async () => {\r\n//     let responseData = await getAllCategory();\r\n//     if (responseData.Categories) {\r\n//       dispatch({\r\n//         type: \"fetchCategoryAndChangeState\",\r\n//         payload: responseData.Categories,\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   if (fData.error || fData.success) {\r\n//     setTimeout(() => {\r\n//       setFdata({ ...fData, success: false, error: false });\r\n//     }, 2000);\r\n//   }\r\n\r\n//   const submitForm = async (e) => {\r\n//     dispatch({ type: \"loading\", payload: true });\r\n//     // Reset and prevent the form\r\n//     e.preventDefault();\r\n//     e.target.reset();\r\n\r\n//     if (!fData.cImage) {\r\n//       dispatch({ type: \"loading\", payload: false });\r\n//       return setFdata({ ...fData, error: \"Please upload a category image\" });\r\n//     }\r\n\r\n//     try {\r\n//       let responseData = await createCategory(fData);\r\n//       if (responseData.success) {\r\n//         fetchData();\r\n//         setFdata({\r\n//           ...fData,\r\n//           cName: \"\",\r\n//           cDescription: \"\",\r\n//           cImage: \"\",\r\n//           cStatus: \"Active\",\r\n//           success: responseData.success,\r\n//           error: false,\r\n//         });\r\n//         dispatch({ type: \"loading\", payload: false });\r\n//         setTimeout(() => {\r\n//           setFdata({\r\n//             ...fData,\r\n//             cName: \"\",\r\n//             cDescription: \"\",\r\n//             cImage: \"\",\r\n//             cStatus: \"Active\",\r\n//             success: false,\r\n//             error: false,\r\n//           });\r\n//         }, 2000);\r\n//       } else if (responseData.error) {\r\n//         setFdata({ ...fData, success: false, error: responseData.error });\r\n//         dispatch({ type: \"loading\", payload: false });\r\n//         setTimeout(() => {\r\n//           return setFdata({ ...fData, error: false, success: false });\r\n//         }, 2000);\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       {/* Black Overlay */}\r\n//       <div\r\n//         onClick={(e) => dispatch({ type: \"addCategoryModal\", payload: false })}\r\n//         className={`${\r\n//           data.addCategoryModal ? \"\" : \"hidden\"\r\n//         } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\r\n//       />\r\n//       {/* End Black Overlay */}\r\n\r\n//       {/* Modal Start */}\r\n//       <div\r\n//         className={`${\r\n//           data.addCategoryModal ? \"\" : \"hidden\"\r\n//         } fixed inset-0 m-4  flex items-center z-30 justify-center`}\r\n//       >\r\n//         <div className=\"relative bg-white w-12/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4  overflow-y-auto px-4 py-4 md:px-8\">\r\n//           <div className=\"flex items-center justify-between w-full pt-4\">\r\n//             <span className=\"text-left font-semibold text-2xl tracking-wider\">\r\n//               Add Category\r\n//             </span>\r\n//             {/* Close Modal */}\r\n//             <span\r\n//               style={{ background: \"#303031\" }}\r\n//               onClick={(e) =>\r\n//                 dispatch({ type: \"addCategoryModal\", payload: false })\r\n//               }\r\n//               className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\r\n//             >\r\n//               <svg\r\n//                 className=\"w-6 h-6\"\r\n//                 fill=\"none\"\r\n//                 stroke=\"currentColor\"\r\n//                 viewBox=\"0 0 24 24\"\r\n//                 xmlns=\"http://www.w3.org/2000/svg\"\r\n//               >\r\n//                 <path\r\n//                   strokeLinecap=\"round\"\r\n//                   strokeLinejoin=\"round\"\r\n//                   strokeWidth={2}\r\n//                   d=\"M6 18L18 6M6 6l12 12\"\r\n//                 />\r\n//               </svg>\r\n//             </span>\r\n//           </div>\r\n//           {fData.error ? alert(fData.error, \"red\") : \"\"}\r\n//           {fData.success ? alert(fData.success, \"green\") : \"\"}\r\n//           <form className=\"w-full\" onSubmit={(e) => submitForm(e)}>\r\n//             <div className=\"flex flex-col space-y-1 w-full py-4\">\r\n//               <label htmlFor=\"name\">Category Name</label>\r\n//               <input\r\n//                 onChange={(e) =>\r\n//                   setFdata({\r\n//                     ...fData,\r\n//                     success: false,\r\n//                     error: false,\r\n//                     cName: e.target.value,\r\n//                   })\r\n//                 }\r\n//                 value={fData.cName}\r\n//                 className=\"px-4 py-2 border focus:outline-none\"\r\n//                 type=\"text\"\r\n//               />\r\n//             </div>\r\n//             <div className=\"flex flex-col space-y-1 w-full\">\r\n//               <label htmlFor=\"description\">Category Description</label>\r\n//               <textarea\r\n//                 onChange={(e) =>\r\n//                   setFdata({\r\n//                     ...fData,\r\n//                     success: false,\r\n//                     error: false,\r\n//                     cDescription: e.target.value,\r\n//                   })\r\n//                 }\r\n//                 value={fData.cDescription}\r\n//                 className=\"px-4 py-2 border focus:outline-none\"\r\n//                 name=\"description\"\r\n//                 id=\"description\"\r\n//                 cols={5}\r\n//                 rows={5}\r\n//               />\r\n//             </div>\r\n//             {/* Image Field & function */}\r\n//             <div className=\"flex flex-col space-y-1 w-full\">\r\n//               <label htmlFor=\"name\">Category Image</label>\r\n//               <input\r\n//                 accept=\".jpg, .jpeg, .png\"\r\n//                 onChange={(e) => {\r\n//                   setFdata({\r\n//                     ...fData,\r\n//                     success: false,\r\n//                     error: false,\r\n//                     cImage: e.target.files[0],\r\n//                   });\r\n//                 }}\r\n//                 className=\"px-4 py-2 border focus:outline-none\"\r\n//                 type=\"file\"\r\n//               />\r\n//             </div>\r\n//             <div className=\"flex flex-col space-y-1 w-full\">\r\n//               <label htmlFor=\"status\">Category Status</label>\r\n//               <select\r\n//                 name=\"status\"\r\n//                 onChange={(e) =>\r\n//                   setFdata({\r\n//                     ...fData,\r\n//                     success: false,\r\n//                     error: false,\r\n//                     cStatus: e.target.value,\r\n//                   })\r\n//                 }\r\n//                 className=\"px-4 py-2 border focus:outline-none\"\r\n//                 id=\"status\"\r\n//               >\r\n//                 <option name=\"status\" value=\"Active\">\r\n//                   Active\r\n//                 </option>\r\n//                 <option name=\"status\" value=\"Disabled\">\r\n//                   Disabled\r\n//                 </option>\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\">\r\n//               <button\r\n//                 style={{ background: \"#303031\" }}\r\n//                 type=\"submit\"\r\n//                 className=\"bg-gray-800 text-gray-100 rounded-full text-lg font-medium py-2\"\r\n//               >\r\n//                 Create category\r\n//               </button>\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// export default AddCategoryModal;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}