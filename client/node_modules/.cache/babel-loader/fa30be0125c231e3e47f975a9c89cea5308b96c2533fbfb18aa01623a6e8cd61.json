{"ast":null,"code":"// import React, { Fragment, useEffect, useContext, useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n// import { LayoutContext } from \"../layout\";\n// import { subTotal, quantity, totalCost } from \"../partials/Mixins\";\n// import { cartListProduct } from \"../partials/FetchApi\";\n// import { getBrainTreeToken, getPaymentProcess } from \"./FetchApi\";\n// import { fetchData, fetchbrainTree, pay } from \"./Action\";\n// import DropIn from \"braintree-web-drop-in-react\";\n\n// const apiURL = process.env.REACT_APP_API_URL;\n\n// export const CheckoutComponent = (props) => {\n//   const history = useHistory();\n//   const { data, dispatch } = useContext(LayoutContext);\n\n//   const [state, setState] = useState({\n//     address: \"\",\n//     phone: \"\",\n//     error: false,\n//     success: false,\n//     clientToken: null,\n//     instance: {},\n//   });\n\n//   useEffect(() => {\n//     fetchData(cartListProduct, dispatch);\n//     fetchbrainTree(getBrainTreeToken, setState);\n\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, []);\n\n//   if (data.loading) {\n//     return (\n//       <div className=\"flex items-center justify-center h-screen\">\n//         <svg\n//           className=\"w-12 h-12 animate-spin text-gray-600\"\n//           fill=\"none\"\n//           stroke=\"currentColor\"\n//           viewBox=\"0 0 24 24\"\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//         >\n//           <path\n//             strokeLinecap=\"round\"\n//             strokeLinejoin=\"round\"\n//             strokeWidth=\"2\"\n//             d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n//           ></path>\n//         </svg>\n//         Please wait until finish\n//       </div>\n//     );\n//   }\n//   return (\n//     <Fragment>\n//       <section className=\"mx-4 mt-20 md:mx-12 md:mt-32 lg:mt-24\">\n//         <div className=\"text-2xl mx-2\">Order</div>\n//         {/* Product List */}\n//         <div className=\"flex flex-col md:flex md:space-x-2 md:flex-row\">\n//           <div className=\"md:w-1/2\">\n//             <CheckoutProducts products={data.cartProduct} />\n//           </div>\n//           <div className=\"w-full order-first md:order-last md:w-1/2\">\n//             {state.clientToken !== null ? (\n//               <Fragment>\n//                 <div\n//                   onBlur={(e) => setState({ ...state, error: false })}\n//                   className=\"p-4 md:p-8\"\n//                 >\n//                   {state.error ? (\n//                     <div className=\"bg-red-200 py-2 px-4 rounded\">\n//                       {state.error}\n//                     </div>\n//                   ) : (\n//                     \"\"\n//                   )}\n//                   <div className=\"flex flex-col py-2\">\n//                     <label htmlFor=\"address\" className=\"pb-2\">\n//                       Delivery Address\n//                     </label>\n//                     <input\n//                       value={state.address}\n//                       onChange={(e) =>\n//                         setState({\n//                           ...state,\n//                           address: e.target.value,\n//                           error: false,\n//                         })\n//                       }\n//                       type=\"text\"\n//                       id=\"address\"\n//                       className=\"border px-4 py-2\"\n//                       placeholder=\"Address...\"\n//                     />\n//                   </div>\n//                   <div className=\"flex flex-col py-2 mb-2\">\n//                     <label htmlFor=\"phone\" className=\"pb-2\">\n//                       Phone\n//                     </label>\n//                     <input\n//                       value={state.phone}\n//                       onChange={(e) =>\n//                         setState({\n//                           ...state,\n//                           phone: e.target.value,\n//                           error: false,\n//                         })\n//                       }\n//                       type=\"number\"\n//                       id=\"phone\"\n//                       className=\"border px-4 py-2\"\n//                       placeholder=\"+977\"  \n//                     />\n\n//                      <style>\n//     {`\n//       /* Hide up and down arrows in most browsers */\n//       #phone::-webkit-inner-spin-button,\n//       #phone::-webkit-outer-spin-button {\n//         -webkit-appearance: none;\n//         margin: 0;\n//       }\n\n//       #phone {\n//         -moz-appearance: textfield; /* Firefox */\n//         appearance: textfield; /* Standard */\n//       }\n//     `}\n//   </style>\n//                   </div>\n//                   <DropIn\n//                     options={{\n//                       authorization: state.clientToken,\n//                       paypal: {\n//                         flow: \"vault\",\n//                       },\n//                     }}\n//                     onInstance={(instance) => (state.instance = instance)}\n//                   />\n//                   <div\n//                     onClick={(e) =>\n//                       pay(\n//                         data,\n//                         dispatch,\n//                         state,\n//                         setState,\n//                         getPaymentProcess,\n//                         totalCost,\n//                         history\n//                       )\n//                     }\n//                     className=\"w-full px-4 py-2 text-center text-white font-semibold cursor-pointer\"\n//                     style={{ background: \"#303031\" }}\n//                   >\n//                     Pay now\n//                   </div>\n//                 </div>\n//               </Fragment>\n//             ) : (\n//               <div className=\"flex items-center justify-center py-12\">\n//                 <svg\n//                   className=\"w-12 h-12 animate-spin text-gray-600\"\n//                   fill=\"none\"\n//                   stroke=\"currentColor\"\n//                   viewBox=\"0 0 24 24\"\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                 >\n//                   <path\n//                     strokeLinecap=\"round\"\n//                     strokeLinejoin=\"round\"\n//                     strokeWidth=\"2\"\n//                     d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n//                   ></path>\n//                 </svg>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </section>\n//     </Fragment>\n//   );\n// };\n\n// const CheckoutProducts = ({ products }) => {\n//   const history = useHistory();\n\n//   return (\n//     <Fragment>\n//       <div className=\"grid grid-cols-2 md:grid-cols-1\">\n//         {products !== null && products.length > 0 ? (\n//           products.map((product, index) => {\n//             return (\n//               <div\n//                 key={index}\n//                 className=\"col-span-1 m-2 md:py-6 md:border-t md:border-b md:my-2 md:mx-0 md:flex md:items-center md:justify-between\"\n//               >\n//                 <div className=\"md:flex md:items-center md:space-x-4\">\n//                   <img\n//                     onClick={(e) => history.push(`/products/${product._id}`)}\n//                     className=\"cursor-pointer md:h-20 md:w-20 object-cover object-center\"\n//                     src={`${apiURL}/uploads/products/${product.pImages[0]}`}\n//                     alt=\"wishListproduct\"\n//                   />\n//                   <div\n//                     className=\"text-lg md:ml-6 truncate\"\n//                     style={{ minWidth: \"ch\", width: \"45ch\" }}\n//                   >\n//                     {product.pName.length > 45\n//                       ? `${product.pName.substring(0, 45)}...`\n//                       : product.pName.padEnd(45, \"\\u00A0\")}\n//                   </div>\n\n//                   <div className=\"md:ml-6 font-semibold text-gray-600 text-sm \">\n//                     Price : Rs.{product.pPrice}.00 <br />\n//                     Quantity : {quantity(product._id)} <br />\n//                     Subtotal : Rs.{subTotal(product._id, product.pPrice)}.00\n//                   </div>\n//                 </div>\n//               </div>\n//             );\n//           })\n//         ) : (\n//           <div>No product found for checkout</div>\n//         )}\n//       </div>\n//     </Fragment>\n//   );\n// };\n\n// export default CheckoutProducts;","map":{"version":3,"names":[],"sources":["C:/Users/Niraj/OneDrive/Desktop/Final SEM PROJECT/ShopPoint/client/src/components/shop/order/CheckoutProducts.js"],"sourcesContent":["// import React, { Fragment, useEffect, useContext, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import { LayoutContext } from \"../layout\";\r\n// import { subTotal, quantity, totalCost } from \"../partials/Mixins\";\r\n// import { cartListProduct } from \"../partials/FetchApi\";\r\n// import { getBrainTreeToken, getPaymentProcess } from \"./FetchApi\";\r\n// import { fetchData, fetchbrainTree, pay } from \"./Action\";\r\n// import DropIn from \"braintree-web-drop-in-react\";\r\n\r\n\r\n// const apiURL = process.env.REACT_APP_API_URL;\r\n\r\n// export const CheckoutComponent = (props) => {\r\n//   const history = useHistory();\r\n//   const { data, dispatch } = useContext(LayoutContext);\r\n\r\n//   const [state, setState] = useState({\r\n//     address: \"\",\r\n//     phone: \"\",\r\n//     error: false,\r\n//     success: false,\r\n//     clientToken: null,\r\n//     instance: {},\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchData(cartListProduct, dispatch);\r\n//     fetchbrainTree(getBrainTreeToken, setState);\r\n\r\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n//   }, []);\r\n\r\n//   if (data.loading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center h-screen\">\r\n//         <svg\r\n//           className=\"w-12 h-12 animate-spin text-gray-600\"\r\n//           fill=\"none\"\r\n//           stroke=\"currentColor\"\r\n//           viewBox=\"0 0 24 24\"\r\n//           xmlns=\"http://www.w3.org/2000/svg\"\r\n//         >\r\n//           <path\r\n//             strokeLinecap=\"round\"\r\n//             strokeLinejoin=\"round\"\r\n//             strokeWidth=\"2\"\r\n//             d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n//           ></path>\r\n//         </svg>\r\n//         Please wait until finish\r\n//       </div>\r\n//     );\r\n//   }\r\n//   return (\r\n//     <Fragment>\r\n//       <section className=\"mx-4 mt-20 md:mx-12 md:mt-32 lg:mt-24\">\r\n//         <div className=\"text-2xl mx-2\">Order</div>\r\n//         {/* Product List */}\r\n//         <div className=\"flex flex-col md:flex md:space-x-2 md:flex-row\">\r\n//           <div className=\"md:w-1/2\">\r\n//             <CheckoutProducts products={data.cartProduct} />\r\n//           </div>\r\n//           <div className=\"w-full order-first md:order-last md:w-1/2\">\r\n//             {state.clientToken !== null ? (\r\n//               <Fragment>\r\n//                 <div\r\n//                   onBlur={(e) => setState({ ...state, error: false })}\r\n//                   className=\"p-4 md:p-8\"\r\n//                 >\r\n//                   {state.error ? (\r\n//                     <div className=\"bg-red-200 py-2 px-4 rounded\">\r\n//                       {state.error}\r\n//                     </div>\r\n//                   ) : (\r\n//                     \"\"\r\n//                   )}\r\n//                   <div className=\"flex flex-col py-2\">\r\n//                     <label htmlFor=\"address\" className=\"pb-2\">\r\n//                       Delivery Address\r\n//                     </label>\r\n//                     <input\r\n//                       value={state.address}\r\n//                       onChange={(e) =>\r\n//                         setState({\r\n//                           ...state,\r\n//                           address: e.target.value,\r\n//                           error: false,\r\n//                         })\r\n//                       }\r\n//                       type=\"text\"\r\n//                       id=\"address\"\r\n//                       className=\"border px-4 py-2\"\r\n//                       placeholder=\"Address...\"\r\n//                     />\r\n//                   </div>\r\n//                   <div className=\"flex flex-col py-2 mb-2\">\r\n//                     <label htmlFor=\"phone\" className=\"pb-2\">\r\n//                       Phone\r\n//                     </label>\r\n//                     <input\r\n//                       value={state.phone}\r\n//                       onChange={(e) =>\r\n//                         setState({\r\n//                           ...state,\r\n//                           phone: e.target.value,\r\n//                           error: false,\r\n//                         })\r\n//                       }\r\n//                       type=\"number\"\r\n//                       id=\"phone\"\r\n//                       className=\"border px-4 py-2\"\r\n//                       placeholder=\"+977\"  \r\n//                     />\r\n\r\n//                      <style>\r\n//     {`\r\n//       /* Hide up and down arrows in most browsers */\r\n//       #phone::-webkit-inner-spin-button,\r\n//       #phone::-webkit-outer-spin-button {\r\n//         -webkit-appearance: none;\r\n//         margin: 0;\r\n//       }\r\n\r\n//       #phone {\r\n//         -moz-appearance: textfield; /* Firefox */\r\n//         appearance: textfield; /* Standard */\r\n//       }\r\n//     `}\r\n//   </style>\r\n//                   </div>\r\n//                   <DropIn\r\n//                     options={{\r\n//                       authorization: state.clientToken,\r\n//                       paypal: {\r\n//                         flow: \"vault\",\r\n//                       },\r\n//                     }}\r\n//                     onInstance={(instance) => (state.instance = instance)}\r\n//                   />\r\n//                   <div\r\n//                     onClick={(e) =>\r\n//                       pay(\r\n//                         data,\r\n//                         dispatch,\r\n//                         state,\r\n//                         setState,\r\n//                         getPaymentProcess,\r\n//                         totalCost,\r\n//                         history\r\n//                       )\r\n//                     }\r\n//                     className=\"w-full px-4 py-2 text-center text-white font-semibold cursor-pointer\"\r\n//                     style={{ background: \"#303031\" }}\r\n//                   >\r\n//                     Pay now\r\n//                   </div>\r\n//                 </div>\r\n//               </Fragment>\r\n//             ) : (\r\n//               <div className=\"flex items-center justify-center py-12\">\r\n//                 <svg\r\n//                   className=\"w-12 h-12 animate-spin text-gray-600\"\r\n//                   fill=\"none\"\r\n//                   stroke=\"currentColor\"\r\n//                   viewBox=\"0 0 24 24\"\r\n//                   xmlns=\"http://www.w3.org/2000/svg\"\r\n//                 >\r\n//                   <path\r\n//                     strokeLinecap=\"round\"\r\n//                     strokeLinejoin=\"round\"\r\n//                     strokeWidth=\"2\"\r\n//                     d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n//                   ></path>\r\n//                 </svg>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </section>\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// const CheckoutProducts = ({ products }) => {\r\n//   const history = useHistory();\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <div className=\"grid grid-cols-2 md:grid-cols-1\">\r\n//         {products !== null && products.length > 0 ? (\r\n//           products.map((product, index) => {\r\n//             return (\r\n//               <div\r\n//                 key={index}\r\n//                 className=\"col-span-1 m-2 md:py-6 md:border-t md:border-b md:my-2 md:mx-0 md:flex md:items-center md:justify-between\"\r\n//               >\r\n//                 <div className=\"md:flex md:items-center md:space-x-4\">\r\n//                   <img\r\n//                     onClick={(e) => history.push(`/products/${product._id}`)}\r\n//                     className=\"cursor-pointer md:h-20 md:w-20 object-cover object-center\"\r\n//                     src={`${apiURL}/uploads/products/${product.pImages[0]}`}\r\n//                     alt=\"wishListproduct\"\r\n//                   />\r\n//                   <div\r\n//                     className=\"text-lg md:ml-6 truncate\"\r\n//                     style={{ minWidth: \"ch\", width: \"45ch\" }}\r\n//                   >\r\n//                     {product.pName.length > 45\r\n//                       ? `${product.pName.substring(0, 45)}...`\r\n//                       : product.pName.padEnd(45, \"\\u00A0\")}\r\n//                   </div>\r\n\r\n//                   <div className=\"md:ml-6 font-semibold text-gray-600 text-sm \">\r\n//                     Price : Rs.{product.pPrice}.00 <br />\r\n//                     Quantity : {quantity(product._id)} <br />\r\n//                     Subtotal : Rs.{subTotal(product._id, product.pPrice)}.00\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             );\r\n//           })\r\n//         ) : (\r\n//           <div>No product found for checkout</div>\r\n//         )}\r\n//       </div>\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// export default CheckoutProducts;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}